import ccxt import time
class MultiPairMarketMakingBot: def init(self, exchanges, trading_pairs, spread=0.01): self.exchanges = {name: ccxt.getattribute(name)() for name in exchanges} self.trading_pairs = trading_pairs self.spread = spread
def fetch_prices(self):
    prices = {}
    for name, exchange in self.exchanges.items():
        prices[name] = {}
        for pair in self.trading_pairs:
            try:
                ticker = exchange.fetch_ticker(pair)
                prices[name][pair] = ticker['last']
            except Exception as e:
                print(f"Error fetching price from {name} for {pair}: {e}")
    return prices

def place_orders(self, prices):
    for name, pairs in prices.items():
        exchange = self.exchanges[name]
        for pair, price in pairs.items():
            try:
                # Calculate buy and sell prices based on the spread
                buy_price = price * (1 - self.spread)
                sell_price = price * (1 + self.spread)

                # Place buy and sell orders
                exchange.create_limit_buy_order(pair, 1, buy_price)
                exchange.create_limit_sell_order(pair, 1, sell_price)
                print(f"Placed orders on {name} for {pair}: Buy at {buy_price}, Sell at {sell_price}")

            except Exception as e:
                print(f"Error placing orders on {name} for {pair}: {e}")

def run(self):
    while True:
        prices = self.fetch_prices()
        if prices:
            self.place_orders(prices)
        time.sleep(10)  # Wait for 10 seconds before the next iteration
if name == "main": exchanges = ['binance', 'kraken'] # List of exchanges to support trading_pairs = ['BTC/USDT', 'ETH/USDT', 'LTC/USDT'] # List of trading pairs bot = MultiPairMarketMakingBot(exchanges, trading_pairs) bot.run()
